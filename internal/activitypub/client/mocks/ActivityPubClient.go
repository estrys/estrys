// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/estrys/estrys/internal/models"
	mock "github.com/stretchr/testify/mock"

	pub "github.com/go-fed/activity/pub"
)

// ActivityPubClient is an autogenerated mock type for the ActivityPubClient type
type ActivityPubClient struct {
	mock.Mock
}

// PostInbox provides a mock function with given fields: ctx, to, from, act
func (_m *ActivityPubClient) PostInbox(ctx context.Context, to *models.Actor, from *models.User, act pub.Activity) error {
	ret := _m.Called(ctx, to, from, act)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.Actor, *models.User, pub.Activity) error); ok {
		r0 = rf(ctx, to, from, act)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewActivityPubClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewActivityPubClient creates a new instance of ActivityPubClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewActivityPubClient(t mockConstructorTestingTNewActivityPubClient) *ActivityPubClient {
	mock := &ActivityPubClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
